{"version":3,"file":"eagle.umd.js","sources":["../node_modules/regenerator-runtime/runtime.js","../node_modules/regenerator-runtime/runtime-module.js","../node_modules/babel-runtime/regenerator/index.js","../src/Eagle.js"],"sourcesContent":["/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n!(function(global) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  var inModule = typeof module === \"object\";\n  var runtime = global.regeneratorRuntime;\n  if (runtime) {\n    if (inModule) {\n      // If regeneratorRuntime is defined globally and we're in a module,\n      // make the exports object identical to regeneratorRuntime.\n      module.exports = runtime;\n    }\n    // Don't bother evaluating the rest of this file if the runtime was\n    // already defined globally.\n    return;\n  }\n\n  // Define the runtime globally (as expected by generated code) as either\n  // module.exports (if we're in a module) or a new, empty object.\n  runtime = global.regeneratorRuntime = inModule ? module.exports : {};\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  runtime.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunctionPrototype[toStringTagSymbol] =\n    GeneratorFunction.displayName = \"GeneratorFunction\";\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      prototype[method] = function(arg) {\n        return this._invoke(method, arg);\n      };\n    });\n  }\n\n  runtime.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  runtime.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      if (!(toStringTagSymbol in genFun)) {\n        genFun[toStringTagSymbol] = \"GeneratorFunction\";\n      }\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  runtime.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return Promise.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return Promise.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration. If the Promise is rejected, however, the\n          // result for this iteration will be rejected with the same\n          // reason. Note that rejections of yielded Promises are not\n          // thrown back into the generator function, as is the case\n          // when an awaited Promise is rejected. This difference in\n          // behavior between yield and await is important, because it\n          // allows the consumer to decide what to do with the yielded\n          // rejection (swallow it and continue, manually .throw it back\n          // into the generator, abandon iteration, whatever). With\n          // await, by contrast, there is no opportunity to examine the\n          // rejection reason outside the generator function, so the\n          // only option is to throw it from the await expression, and\n          // let the generator function handle the exception.\n          result.value = unwrapped;\n          resolve(result);\n        }, reject);\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new Promise(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  runtime.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  runtime.async = function(innerFn, outerFn, self, tryLocsList) {\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList)\n    );\n\n    return runtime.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        if (delegate.iterator.return) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  Gp[toStringTagSymbol] = \"Generator\";\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  runtime.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  runtime.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n})(\n  // In sloppy mode, unbound `this` refers to the global object, fallback to\n  // Function constructor if we're in global strict mode. That is sadly a form\n  // of indirect eval which violates Content Security Policy.\n  (function() { return this })() || Function(\"return this\")()\n);\n","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n// This method of obtaining a reference to the global object needs to be\n// kept identical to the way it is obtained in runtime.js\nvar g = (function() { return this })() || Function(\"return this\")();\n\n// Use `getOwnPropertyNames` because not all browsers support calling\n// `hasOwnProperty` on the global `self` object in a worker. See #183.\nvar hadRuntime = g.regeneratorRuntime &&\n  Object.getOwnPropertyNames(g).indexOf(\"regeneratorRuntime\") >= 0;\n\n// Save the old regeneratorRuntime in case it needs to be restored later.\nvar oldRuntime = hadRuntime && g.regeneratorRuntime;\n\n// Force reevalutation of runtime.js.\ng.regeneratorRuntime = undefined;\n\nmodule.exports = require(\"./runtime\");\n\nif (hadRuntime) {\n  // Restore the original runtime.\n  g.regeneratorRuntime = oldRuntime;\n} else {\n  // Remove the global property added by runtime.js.\n  try {\n    delete g.regeneratorRuntime;\n  } catch(e) {\n    g.regeneratorRuntime = undefined;\n  }\n}\n","module.exports = require(\"regenerator-runtime\");\n","import $ from 'jquery';\n\nconst slice = Array.prototype.slice;\n\n//私有方法，绑定页面上，当前Eagle管辖区域中，有ID的元素到当前的Eagle实例\nfunction bindHasIdEl() {\n  let self = this,\n    hasIdEls = self.$root.find('*[id]');\n\n  hasIdEls.each(function (idx, elem) {\n    let $el = $(elem),\n      id = $el.attr('id');\n\n    self['$' + id.replace(/-(.)/g, function (str, $1) {\n      return $1.toUpperCase();\n    })] = $el;\n  });\n\n}\n\n/**\n * 代码管理的根类\n * @param rootElement\n * @constructor\n */\nfunction Eagle(rootElement = document.body) {\n  let self = this,\n    $root,\n    events = self.events,\n    eventHandlers = self.eventHandlers,\n    //表达式中的第一个空格\n    _start,\n    //拿到表达式中的事件名\n    _event,\n    //拿到表达式中的选择器\n    _selector;\n\n  function proxy(handler) {\n    return function (event) {\n      try {\n        if (this.tagName.toUpperCase() !== 'INPUT') {\n          //不是INPUT调用关闭键盘的方法\n          Eagle.hideKeyBoard();\n        }\n      } catch (e) {\n        //ignore this\n      }\n      handler.call(self, event, $(this));\n    };\n  }\n\n  //初始化根节点\n  $root = self.$root = $(rootElement);\n  //处理声明式事件绑定\n  for (let expression in events) {\n    //表达式中的第一个空格\n    _start = expression.indexOf(' ');\n    //拿到表达式中的事件名\n    _event = expression.substring(0, _start);\n    //拿到表达式中的选择器\n    _selector = expression.slice(_start - expression.length + 1);\n\n    $root.delegate(_selector, _event, proxy(eventHandlers[events[expression]]));\n  }\n\n  bindHasIdEl.call(this);\n}\n\nEagle.hideKeyBoard = function () {\n  document.activeElement.blur();\n};\n\n/**\n * 实现继承\n * @param subClassProto 子类的原型及构造函数\n * @returns {Function} 子类的构造函数\n */\nEagle.extend = function extend(subClassProto) {\n  let ParentClass = this;\n  //每个子类都必须有自己的构造函数，且子类的构造函数中都必须调用父类的构造函数\n  if (!subClassProto || !subClassProto.hasOwnProperty('constructor') || typeof subClassProto.constructor !== 'function') {\n    throw new Error('No constructor find in sub class, please check your code!');\n  }\n  //拿到子类的构造函数\n  let SubClassConstructor = subClassProto.constructor;\n  //从子类原型链上删掉构造器字段\n  delete subClassProto.constructor;\n\n  let innerStructs = ['events', 'eventHandlers', 'responseHandlers'];\n  let localProto = '__proto__';\n\n  for (let i = 0, len = innerStructs.length; i < len; i++) {\n    if (!(innerStructs[i] in subClassProto)) {\n      subClassProto[innerStructs[i]] = {};\n    }\n  }\n\n  //格式化子类的原型链\n  for (let key in subClassProto) {\n\n    //如果说当前的key是一个内部结构依赖的对象，则设置当前的该对象继承原对象\n    if (~innerStructs.indexOf(key)) {\n      subClassProto[key][localProto] = ParentClass.prototype[key];\n    }\n\n    if (!subClassProto[key] || !subClassProto[key].value) {\n      subClassProto[key] = {\n        value: subClassProto[key],\n        enumerable: true,\n        writable: true,\n        configurable: true,\n      };\n\n\n    }\n  }\n\n  //实现原型继承\n  SubClassConstructor.prototype = Object.create(ParentClass.prototype, subClassProto);\n\n  //  _Parent主要用于子类直接调用父类构造器，实现参数继承\n  // 子类不能通过任何方式去修改父类的构造器，父类的构造器在子类中也不可枚举\n  SubClassConstructor._Parent = function (self, _args) {\n    let args = slice.call(_args);\n    ParentClass.apply(self, args);\n  };\n\n  //子类的extend方法直接使用父类的\n  SubClassConstructor.extend = extend;\n\n  Object.defineProperties(SubClassConstructor.prototype, {\n    // 重写子类的原型构造器指向，方便调试查看类继承结构\n    constructor: {\n      value: SubClassConstructor,\n      configurable: false,\n    },\n    //_super指向父类的原型链，子类不能通过任何方式去修改父类的原型链，父类的原型链在子类中也不可枚举\n    _super: {\n      value: ParentClass.prototype,\n      configurable: false,\n    },\n  });\n\n  return SubClassConstructor;\n};\n\n//定义Eagle的共有默认属性和方法\nEagle.prototype = {\n  constructor: Eagle,\n  events: {\n\n  },\n  eventHandlers: {\n    //内置时间处理器，阻止冒泡\n    stopPropagation: function (e) {\n      e.stopPropagation();\n    },\n    //内置事件处理器，阻止默认行为\n    preventDefault: function (e) {\n      e.preventDefault();\n    },\n    //内置事件处理器，阻止默认行为并阻止冒泡\n    stopAndPrevent: function (e) {\n      e.stopPropagation();\n      e.preventDefault();\n    }\n  },\n  responseHandlers: {},\n};\n\n\nlet requestFilterChain = [];\nlet responseFilterChain = [];\n\n//定义中止当前请求或响应的常量\nEagle.ABORT = false;\n//定义请求和响应跳过后续过滤器的常量\nEagle.SKIP_FILTERS = true;\n//定义正常继续执行后续过滤器的常量\nEagle.CONTINUE = undefined;\n\n/**\n * 给request组件添加请求过滤器\n * @param {Function} filter 过滤器函数\n *                          入参: {Object} 格式\n *                          {\n *                              //serviceName和apiName是只读属性，修改无效\n *                              serviceName: {String} 服务名\n *                              apiName: {String} 接口名\n *                              //options中的内容可以修改(比如添加头，添加默认上送的数据，修改请求方式等等等等)\n *                              options: {Object} 请求发送时的最后的参数\n *                          }\n *                          该函数返回值可选{Boolean|undefined}\n *                          true: 中断整个过滤链;\n *                          false: 中断整个过程(不发送请求)\n *                          undefined: 继续执行下一个过滤器\n */\nEagle.addRequestFilter = function addPrevInterceptor(filter) {\n  requestFilterChain.push(filter);\n};\n\n/**\n * 给request组件添加响应过滤器\n * @param {Function} filter 过滤器函数\n *                          入参: {Object} 格式\n *                          {\n   *                              serviceName: {String} 服务名\n   *                              apiName: {String} 接口名\n   *                              options: {Object} 请求发送时的最后的参数\n   *                              xhr: {jq.XHR} 请求发送代理对象\n   *                              //下面这些参数是过滤器可以赋的传出参数，该参数会在请求响应处理器中使用\n   *                              resp: {*} 默认值 undefined\n   *                              status: {Number} 默认值 undefined\n   *                              headers: {Object} 默认值 undefined\n   *                          }\n *                          该函数返回值可选{Boolean|undefined}\n *                          true: 中断整个过滤链;\n *                          false: 中断整个过程(不调用回调)\n *                          undefined: 继续执行下一个过滤器\n */\nEagle.addResponseFilter = function (filter) {\n  responseFilterChain.push(filter);\n};\n\n/**\n * 根据服务名和api名，以及运行时参数，获取请求的URL地址\n * @param {String} serviceName  服务名\n * @param {String} apiName  接口名\n * @param {Object} options  请求参数\n * @returns {String} 补充完参数后的URL\n */\nEagle.getURL = function getURL(serviceName, apiName, options) {\n\n  if (!window.CONFIG || !CONFIG.SERVICES || !CONFIG.SERVICES[serviceName]) {\n    throw new Error('The serviceName [' + serviceName + '] not defined in your config, please check your config!');\n  }\n\n\n  let url = CONFIG.SERVICES[serviceName].API[apiName];\n\n  if (!url) {\n    throw new Error('The apiName not defined in your service [' + serviceName + '], please check your config.');\n  }\n\n  let params = options.params;\n  let queries = options.query;\n\n  if (typeof params === 'object') {\n    for (let pKey in options) {\n      url = url.replace(new RegExp('\\[\\:\\*\\]' + pKey), options[pKey]);\n    }\n  }\n\n  if (typeof queries === 'object') {\n    url += decodeURIComponent($.param(queries));\n  } else if (typeof queries === 'string') {\n    url += queries;\n  }\n\n  return CONFIG.SERVICES[serviceName].BASE_URL + url;\n\n};\n\n/**\n * 应用过滤器链\n * @param filterChain {Array<Function>} 过滤器链\n * @param options {Object} 传入到过滤器中的参数\n * @returns {boolean}\n *          false 中断当前过程(如果的请求，则中断当前请求，如果是响应，则不调用回调)\n */\nfunction applyFilterChain(filterChain, options) {\n  let execResult;\n  for (let i = 0, len = filterChain.length; i < len; i++) {\n    execResult = filterChain[i].call(this, options);\n    //中断过程，并返回\n    if (false === execResult) {\n      return false;\n    }\n    //中断继续执行过滤器链\n    if (true === execResult) {\n      break;\n    }\n  }\n}\n\n/**\n * 发送请求\n * @param serviceName {String} 服务名，用于在配置中，将后台服务配置模块化，方便接口管理\n * @param apiName {String} 接口名，全局唯一，该字段对应的URL从window.CONFIG.SERVICES中获取，因此使用该框架，在全局必然会又一个CONFIG对象，否则会报错\n * @param options {Object} 请求参数，格式如下\n *      {\n *          type: {String} 请求发送的http方法，可选值 GET,POST,PUT,DELETE,OPTIONS,HEAD,TRACE等\n *          headers: {Object} http头信息\n *          params: {Object} 路径变量，填充apiName对应的url中存在的路径变量\n *          query: {Object} 对应请求路径的query string,也就是路径问好后需要带上的参数，自动序列化并加到路径后面\n *          body: {Object} 对应的http请求体，body根据请求发送时的Content-Type进行序列化，具体序列化方式，参考HTTP标准\n *          timeout: {Number} 请求超时毫秒数\n *          handler: {String} 请求完成后的回调，字符串代表Eagle实例中的requestHandlers中函数的key\n *            回调参数列表:\n *            respBody: {Object|String} 根据响应头中的Content-Type对响应体进行解析，模式尝试使用json方式\n *            status: {Number} http响应状态码，0表示请求未发送成功，往往表示客户端网络未连接\n *            headers: {Object} 所有能成功获取的响应头(某些跨域情况下，以及某些头是不能直接获取的)\n *      }\n */\nEagle.prototype.request = async function request(serviceName, apiName, options) {\n  return new Promise((resolve, reject) => {\n    let self = this;\n    let _body = null;\n    if (options.body instanceof FormData) {\n      _body = options.body;\n      options.processData = false;\n      options.contentType = false;\n    }\n\n    //深拷贝一下参数\n    options = JSON.parse(JSON.stringify(options));\n\n    if (_body !== null) {\n      options.body = _body;\n    }\n\n    //根据服务名，接口名获取当前发送请求的地址\n    options.url = Eagle.getURL(serviceName, apiName, options);\n\n    //首先应用请求发送前的过滤器链，如果过滤器链执行过程中返回了false，则该请求被中断，不再发送\n    if (false === applyFilterChain.call(self, requestFilterChain, {\n      serviceName: serviceName,\n      apiName: apiName,\n      options: options,\n    })) {\n      console.warn('请求在请求过滤器链中被中断, 请处理您的代码！');\n      resolve(null);\n      return;\n    }\n\n    if (options.body instanceof FormData) {\n      delete (options.headers || {})['Content-Type'];\n    }\n\n    //预处理\n    function handlerResp(xhr) {\n      let filterOption = {\n        serviceName: serviceName,\n        apiName: apiName,\n        options: options,\n        xhr: xhr,\n        response: getResponse(xhr),\n        status: getStatus(xhr),\n        headers: getHeaders(xhr),\n      };\n\n      //如果过滤器链返回了false, 那么直接返回空响应\n      if (false === applyFilterChain.call(self, responseFilterChain, filterOption)) {\n        console.warn('响应过滤器链拦截了您的相应！');\n        resolve(null);\n        return;\n      }\n\n      // 响应请求\n      resolve({\n        data: filterOption.response,\n        status: filterOption.status,\n        headers: filterOption.headers,\n        request: filterOption.options\n      });\n    }\n\n    options.success = function (resp, status, xhr) {\n      handlerResp(xhr);\n    };\n\n    options.error = function (xhr, error) {\n      handlerResp(xhr);\n    };\n\n    options.data = options.body;\n\n    $.ajax(options);\n  });\n};\n\nfunction getResponse(xhr) {\n  let response = xhr.responseText;\n  try {\n    response = JSON.parse(response);\n  } catch (e) {\n    //ignore this\n  }\n\n  return response;\n}\n\nfunction getStatus(xhr) {\n  return xhr.status;\n}\n\nfunction getHeaders(xhr) {\n  let headerTexts = xhr.getAllResponseHeaders().split('\\n');\n  let headers = {},\n    textItem;\n  for (let i = 0, len = headerTexts.length; i < len; i++) {\n    textItem = headerTexts[i].match(/([^:]+):\\s*(.+)/);\n    if (!!textItem) {\n      headers[textItem[1]] = textItem[2];\n    }\n  }\n  return headers;\n}\n\nfunction defaultBody(body) {\n  return function (option) {\n    let defaultOptions = option.options;\n\n    if (!defaultOptions.body) {\n      defaultOptions.body = {};\n    }\n\n    for (let key in body) {\n      if (!(key in defaultOptions.body)) {\n        defaultOptions.body[key] = body[key];\n      }\n    }\n  };\n}\n\nfunction defaultHeaders(headers) {\n  return function (option) {\n    let defaultOptions = option.options;\n\n    if (!defaultOptions.headers) {\n      defaultOptions.headers = {};\n    }\n\n    for (let key in headers) {\n      if (!(key in defaultOptions.headers)) {\n        defaultOptions.headers[key] = headers[key];\n      }\n    }\n  };\n}\n\nfunction defaultQuery(query) {\n  return function (option) {\n    let defaultOptions = option.options;\n\n    if (!defaultOptions.query) {\n      defaultOptions.query = {};\n    }\n\n    for (let key in query) {\n      if (!(key in defaultOptions.query)) {\n        defaultOptions.query[key] = query[key];\n      }\n    }\n  };\n}\n\nexport default Eagle;"],"names":["global","undefined","Op","Object","prototype","hasOwn","hasOwnProperty","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","runtime","regeneratorRuntime","module","exports","wrap","GenStateSuspendedStart","GenStateSuspendedYield","GenStateExecuting","GenStateCompleted","ContinueSentinel","IteratorPrototype","this","getProto","getPrototypeOf","NativeIteratorPrototype","values","call","Gp","GeneratorFunctionPrototype","Generator","create","GeneratorFunction","constructor","displayName","isGeneratorFunction","genFun","ctor","name","mark","setPrototypeOf","__proto__","awrap","arg","__await","defineIteratorMethods","AsyncIterator","async","innerFn","outerFn","self","tryLocsList","iter","next","then","result","done","value","toString","keys","object","key","push","reverse","length","pop","Context","reset","skipTempReset","prev","sent","_sent","delegate","method","tryEntries","forEach","resetTryEntry","charAt","isNaN","slice","stop","rootRecord","completion","type","rval","dispatchException","exception","context","handle","loc","caught","record","i","entry","tryLoc","hasCatch","hasFinally","catchLoc","finallyLoc","Error","abrupt","finallyEntry","complete","afterLoc","finish","catch","thrown","delegateYield","iterable","resultName","nextLoc","state","protoGenerator","generator","_invoke","doneResult","delegateResult","maybeInvokeDelegate","tryCatch","fn","obj","err","previousPromise","callInvokeWithMethodAndArg","Promise","resolve","reject","invoke","unwrapped","return","TypeError","info","pushTryEntry","locs","iteratorMethod","Function","g","hadRuntime","getOwnPropertyNames","indexOf","oldRuntime","require$$0","e","Array","Eagle","rootElement","document","body","$root","events","eventHandlers","proxy","handler","event","tagName","toUpperCase","hideKeyBoard","$","expression","substring","_start","_selector","_event","find","each","idx","elem","$el","id","attr","replace","str","$1","activeElement","blur","extend","subClassProto","ParentClass","SubClassConstructor","innerStructs","len","_Parent","_args","args","apply","defineProperties","stopPropagation","preventDefault","requestFilterChain","responseFilterChain","applyFilterChain","filterChain","options","execResult","getResponse","xhr","response","responseText","JSON","parse","getHeaders","headerTexts","getAllResponseHeaders","split","headers","textItem","match","ABORT","SKIP_FILTERS","CONTINUE","addRequestFilter","filter","addResponseFilter","getURL","serviceName","apiName","window","CONFIG","SERVICES","url","API","params","queries","query","pKey","RegExp","decodeURIComponent","param","BASE_URL","request","_this","_body","FormData","processData","contentType","stringify","warn","handlerResp","filterOption","status","success","resp","error","data","ajax"],"mappings":"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"}